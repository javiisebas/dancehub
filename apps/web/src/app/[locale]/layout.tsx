import './globals.css';

import { routing } from '@web/i18n/routing';
import { Locale } from '@web/types';
import { cn } from '@web/utils';
import type { Metadata } from 'next';
import { getMessages } from 'next-intl/server';
import { Montserrat } from 'next/font/google';
import { notFound } from 'next/navigation';
import { ReactNode } from 'react';
import { ToasterUi } from './components/ToasterUi';
import { RootProviders } from './providers';

type Props = {
    children: ReactNode;
    params: { locale: Locale };
};

const montserrat = Montserrat({
    subsets: ['latin'],
    display: 'swap',
});

export const metadata: Metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app',
};

export default async function RootLayout({ children, params }: Props) {
    const { locale } = await params;

    if (!routing.locales.includes(locale)) {
        notFound();
    }

    const messages = await getMessages();

    return (
        <html suppressHydrationWarning lang="en">
            <body
                className={cn(
                    'min-h-screen bg-background font-sans antialiased',
                    montserrat.className,
                )}
            >
                <RootProviders locale={locale} messages={messages}>
                    <ToasterUi />

                    {children}
                </RootProviders>
            </body>
        </html>
    );
}
