import { BaseRepository } from '@api/modules/core/database/base';
import { Injectable } from '@nestjs/common';
import { {{pascalCase name}} } from '../../domain/entities/{{kebabCase name}}.entity';
import { I{{pascalCase name}}Repository } from '../../domain/repositories/i-{{kebabCase name}}.repository';
import { {{camelCase name}}s } from '../schemas/{{kebabCase name}}.schema';

@Injectable()
export class {{pascalCase name}}RepositoryImpl
    extends BaseRepository<{{pascalCase name}}, typeof {{camelCase name}}s>
    implements I{{pascalCase name}}Repository
{
    protected readonly table = {{camelCase name}}s;
    protected readonly entityName = '{{pascalCase name}}';

    protected toDomain(schema: typeof {{camelCase name}}s.$inferSelect): {{pascalCase name}} {
        return new {{pascalCase name}}(
            schema.id,
            {{#each fields}}
            schema.{{camelCase name}},
            {{/each}}
            schema.createdAt,
            schema.updatedAt,
        );
    }

    protected toSchema(entity: {{pascalCase name}}): any {
        return {
            {{#each fields}}
            {{#if required}}
            {{camelCase name}}: entity.{{camelCase name}},
            {{else}}
            ...(entity.{{camelCase name}} && { {{camelCase name}}: entity.{{camelCase name}} }),
            {{/if}}
            {{/each}}
        };
    }
}