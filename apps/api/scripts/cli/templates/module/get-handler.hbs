import { CacheService, CacheTTL } from '@api/modules/core/cache';
import { Inject, Injectable } from '@nestjs/common';
import { {{pascalCase name}} } from '../../domain/entities/{{kebabCase name}}.entity';
import { I{{pascalCase name}}Repository, {{constantCase name}}_REPOSITORY } from '../../domain/repositories/i-{{kebabCase name}}.repository';
import { {{pascalCase name}}CacheKey } from '../../infrastructure/cache/{{kebabCase name}}.cache-keys';

export class Get{{pascalCase name}}Query {
    constructor(public readonly id: string) {}
}

@Injectable()
export class Get{{pascalCase name}}Handler {
    constructor(
        @Inject({{constantCase name}}_REPOSITORY) private readonly repository: I{{pascalCase name}}Repository,
        private readonly cache: CacheService,
    ) {}

    async execute({ id }: Get{{pascalCase name}}Query): Promise<{{pascalCase name}}> {
        return this.cache.getOrSet(
            {{pascalCase name}}CacheKey.byId(id),
            async () => await this.repository.findById(id),
            { ttl: CacheTTL.MEDIUM },
        );
    }
}
