import { InferFields } from '@api/modules/core/database/base';
import { IBaseTranslatableRepository } from '@api/modules/core/database/interfaces/i-base-translatable.repository';
import { {{camelCase name}}s } from '../../infrastructure/schemas/{{kebabCase name}}.schema';
import { {{pascalCase name}}Translation } from '../entities/{{kebabCase name}}-translation.entity';
import { {{pascalCase name}} } from '../entities/{{kebabCase name}}.entity';
{{#if relations}}
{{#each relations}}
import { {{entity}} } from '../../../{{kebabCase (singularize table)}}/domain/entities/{{kebabCase (singularize table)}}.entity';
{{/each}}
{{/if}}

export const {{constantCase name}}_REPOSITORY = Symbol('{{constantCase name}}_REPOSITORY');

export type {{pascalCase name}}Field = InferFields<typeof {{camelCase name}}s>;
{{#if relations}}
export type {{pascalCase name}}Relations = {
{{#each relations}}
    {{name}}?: {{entity}} | {{entity}}[];
{{/each}}
};
{{else}}
export type {{pascalCase name}}Relations = {};
{{/if}}

export interface I{{pascalCase name}}Repository
    extends IBaseTranslatableRepository<{{pascalCase name}}, {{pascalCase name}}Translation, {{pascalCase name}}Field, {{pascalCase name}}Relations> {
    findBySlug(slug: string): Promise<{{pascalCase name}} | null>;
    slugExists(slug: string): Promise<boolean>;
}
