import { BaseGetPaginatedTranslatableHandler } from '@api/common/abstract/application';
import { Inject, Injectable } from '@nestjs/common';
import { Paginated{{pascalCase name}}Request } from '@repo/shared';
import { {{pascalCase name}}Translation } from '../../domain/entities/{{kebabCase name}}-translation.entity';
import { {{pascalCase name}} } from '../../domain/entities/{{kebabCase name}}.entity';
import {
    {{constantCase name}}_REPOSITORY,
    I{{pascalCase name}}Repository,
} from '../../domain/repositories/i-{{kebabCase name}}.repository';

export class GetPaginated{{pascalCase (pluralize name)}}Query {
    constructor(public readonly data: Paginated{{pascalCase name}}Request) {}
}

@Injectable()
export class GetPaginated{{pascalCase (pluralize name)}}Handler extends BaseGetPaginatedTranslatableHandler<
    {{pascalCase name}},
    {{pascalCase name}}Translation
> {
    constructor(@Inject({{constantCase name}}_REPOSITORY) repository: I{{pascalCase name}}Repository) {
        super(repository);
    }

    async executeQuery({ data }: GetPaginated{{pascalCase (pluralize name)}}Query) {
        return this.execute(data);
    }
}