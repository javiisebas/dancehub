import { BaseRepository } from '@api/modules/core/database/base/base.repository';
import { Injectable } from '@nestjs/common';
import { {{pascalCase name}}Field } from '@repo/shared';
import { {{pascalCase name}} } from '../../domain/entities/{{kebabCase name}}.entity';
import { I{{pascalCase name}}Repository } from '../../domain/repositories/i-{{kebabCase name}}.repository';
import { {{camelCase (pluralize name)}} } from '../schemas/{{kebabCase name}}.schema';

@Injectable()
export class {{pascalCase name}}RepositoryImpl
    extends BaseRepository<{{pascalCase name}}, typeof {{camelCase (pluralize name)}}, {{pascalCase name}}Field>
    implements I{{pascalCase name}}Repository
{
    protected table = {{camelCase (pluralize name)}};
    protected entityName = '{{pascalCase name}}';

    protected toDomain(schema: typeof {{camelCase (pluralize name)}}.$inferSelect): {{pascalCase name}} {
        return new {{pascalCase name}}(
            schema.id,
            schema.createdAt,
            schema.updatedAt,
        );
    }

    protected toSchema(entity: {{pascalCase name}}): Partial<typeof {{camelCase (pluralize name)}}.$inferInsert> {
        return {};
    }
}
