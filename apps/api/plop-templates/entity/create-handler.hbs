import { CreateCommand } from '@api/common/abstract/application/commands.abstract';
import { Inject, Injectable } from '@nestjs/common';
import { Create{{pascalCase name}}Request } from '@repo/shared';
import { randomUUID } from 'crypto';
import { {{pascalCase name}} } from '../../domain/entities/{{kebabCase name}}.entity';
import { I{{pascalCase name}}Repository, {{constantCase name}}_REPOSITORY } from '../../domain/repositories/i-{{kebabCase name}}.repository';

export class Create{{pascalCase name}}Command extends CreateCommand<Create{{pascalCase name}}Request> {}

@Injectable()
export class Create{{pascalCase name}}Handler {
    constructor(@Inject({{constantCase name}}_REPOSITORY) private readonly repository: I{{pascalCase name}}Repository) {}

    async execute({ data }: Create{{pascalCase name}}Command): Promise<{{pascalCase name}}> {
        const {{camelCase name}} = {{pascalCase name}}.create(randomUUID());

        const saved{{pascalCase name}} = await this.repository.save({{camelCase name}});

        return saved{{pascalCase name}};
    }
}
