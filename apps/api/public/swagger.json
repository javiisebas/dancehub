{
  "openapi": "3.0.0",
  "paths": {
    "/api/storage/upload": {
      "post": {
        "operationId": "StorageController_uploadFile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Storage"
        ]
      }
    },
    "/api/storage/upload/image": {
      "post": {
        "operationId": "StorageController_uploadImage",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Storage"
        ]
      }
    },
    "/api/storage/upload/document": {
      "post": {
        "operationId": "StorageController_uploadDocument",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Storage"
        ]
      }
    },
    "/api/storage/upload/video": {
      "post": {
        "operationId": "StorageController_uploadVideo",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Storage"
        ]
      }
    },
    "/api/storage": {
      "get": {
        "operationId": "StorageController_paginate",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Storage"
        ]
      }
    },
    "/api/storage/{id}": {
      "get": {
        "operationId": "StorageController_findById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Storage"
        ]
      },
      "patch": {
        "operationId": "StorageController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStorageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Storage"
        ]
      },
      "delete": {
        "operationId": "StorageController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Storage"
        ]
      }
    },
    "/api/storage/{id}/presigned-url": {
      "get": {
        "operationId": "StorageController_getPresignedUrl",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Storage"
        ]
      }
    },
    "/api/storage/{id}/public-url": {
      "get": {
        "operationId": "StorageController_getPublicUrl",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Storage"
        ]
      }
    },
    "/api/health": {
      "get": {
        "operationId": "HealthController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Health"
        ]
      }
    },
    "/api/users": {
      "post": {
        "operationId": "UserController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      },
      "get": {
        "operationId": "UserController_paginate",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "UserController_findById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      },
      "patch": {
        "operationId": "UserController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      },
      "delete": {
        "operationId": "UserController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/dance-styles": {
      "post": {
        "operationId": "DanceStyleController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDanceStyleRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "DanceStyle"
        ]
      },
      "get": {
        "operationId": "DanceStyleController_paginate",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DanceStyle"
        ]
      }
    },
    "/api/dance-styles/{id}/all-translations": {
      "get": {
        "operationId": "DanceStyleController_findByIdWithAllTranslations",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DanceStyle"
        ]
      }
    },
    "/api/dance-styles/{id}": {
      "get": {
        "operationId": "DanceStyleController_findById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DanceStyle"
        ]
      },
      "patch": {
        "operationId": "DanceStyleController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDanceStyleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DanceStyle"
        ]
      },
      "delete": {
        "operationId": "DanceStyleController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "DanceStyle"
        ]
      }
    },
    "/api/auth/local/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create an account with provided data if correct"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/local/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Logs in user"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/logout": {
      "delete": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Logs out user"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/me": {
      "get": {
        "operationId": "AuthController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Currently logged user profile"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/refresh": {
      "post": {
        "operationId": "AuthController_refresh",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Refresh tokens"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/verify-email": {
      "get": {
        "operationId": "AuthController_verifyEmail",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Confirm account"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/resend-verify-email": {
      "post": {
        "operationId": "AuthController_resendConfirmToken",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Resend confirmation token"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/password/reset": {
      "post": {
        "operationId": "AuthController_resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset your password"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/password/new": {
      "patch": {
        "operationId": "AuthController_setNewPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Set new password"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/password/change": {
      "patch": {
        "operationId": "AuthController_changePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordValuesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Change your password"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/social/login": {
      "post": {
        "operationId": "AuthController_socialLogin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SocialLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login o registro de usuario vía proveedor social"
          }
        },
        "tags": [
          "auth"
        ]
      }
    }
  },
  "info": {
    "title": "Dance Manager",
    "description": "Dance Manager description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "cookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "connect.sid"
      }
    },
    "schemas": {
      "UploadFileRequest": {
        "type": "object",
        "properties": {}
      },
      "UpdateStorageRequest": {
        "type": "object",
        "properties": {}
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {}
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {}
      },
      "CreateDanceStyleRequest": {
        "type": "object",
        "properties": {}
      },
      "UpdateDanceStyleRequest": {
        "type": "object",
        "properties": {}
      },
      "ResetPasswordRequest": {
        "type": "object",
        "properties": {}
      },
      "NewPasswordRequest": {
        "type": "object",
        "properties": {}
      },
      "PasswordValuesRequest": {
        "type": "object",
        "properties": {}
      },
      "SocialLoginRequest": {
        "type": "object",
        "properties": {}
      }
    }
  }
}