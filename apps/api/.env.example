# ===========================================
# üöÄ DanceHub API - Development Environment
# ===========================================

# ---------------------------
# üèóÔ∏è App Configuration
# ---------------------------
NODE_ENV=development
PORT=4000
API_ORIGIN=http://localhost:4000/api
API_PREFIX=/api
API_URL=http://localhost:4000
FRONTEND_ORIGIN=http://localhost:3000

# ---------------------------
# üóÑÔ∏è Database (PostgreSQL)
# ---------------------------
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_USERNAME=dancehub
DATABASE_PASSWORD=dancehub123
DATABASE_NAME=dancehub
DATABASE_SCHEMA=public
DATABASE_LOGGING=false

# Alternative: DATABASE_URL (overrides individual settings)
# DATABASE_URL=postgresql://dancehub:dancehub123@localhost:5432/dancehub

# ---------------------------
# üì¶ Redis Cache
# ---------------------------
REDIS_HOST=localhost
REDIS_PORT=6380
REDIS_PASSWORD=
REDIS_DB=0
CACHE_TTL=3600
CACHE_MAX=1000

# ---------------------------
# üîê JWT Authentication
# ---------------------------
JWT_SECRET=dev-jwt-secret-please-change-in-production-min-32-chars
JWT_EXPIRATION_TIME=15m
JWT_REFRESH_SECRET=dev-refresh-secret-please-change-in-production-min-32-chars
JWT_REFRESH_EXPIRATION_TIME=7d

# ---------------------------
# üåê OAuth (Google)
# ---------------------------
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_CALLBACK_URL=http://localhost:4000/api/auth/google/callback

# ---------------------------
# üíæ Storage (MinIO Local / Cloudflare R2)
# ---------------------------
# Para desarrollo local (MinIO):
STORAGE_PROVIDER=s3
STORAGE_ENDPOINT=http://localhost:9000
STORAGE_REGION=auto
STORAGE_ACCESS_KEY_ID=minioadmin
STORAGE_SECRET_ACCESS_KEY=minioadmin123
STORAGE_BUCKET=dancehub
STORAGE_PUBLIC_URL=http://localhost:9000/dancehub
STORAGE_FORCE_PATH_STYLE=true

# Para producci√≥n (Cloudflare R2):
# STORAGE_PROVIDER=cloudflare
# STORAGE_ENDPOINT=https://<account-id>.r2.cloudflarestorage.com
# STORAGE_ACCESS_KEY_ID=your-r2-access-key
# STORAGE_SECRET_ACCESS_KEY=your-r2-secret-key
# STORAGE_BUCKET=dancehub-prod
# STORAGE_PUBLIC_URL=https://cdn.dancehub.com

# ---------------------------
# üìß Email (Development: MailHog)
# ---------------------------
# MailHog (local testing):
MAIL_HOST=localhost
MAIL_PORT=1025
MAIL_USER=
MAIL_PASSWORD=
MAIL_FROM=noreply@dancehub.local
MAIL_FROM_NAME=DanceHub

# Producci√≥n (Gmail, SendGrid, etc):
# MAIL_HOST=smtp.gmail.com
# MAIL_PORT=587
# MAIL_USER=your-email@gmail.com
# MAIL_PASSWORD=your-app-password
# MAIL_FROM=noreply@dancehub.com

# ---------------------------
# üí≥ Stripe Payments
# ---------------------------
# Test keys (obtener de: https://dashboard.stripe.com/test/apikeys)
STRIPE_SECRET_KEY=sk_test_51...your_test_key
STRIPE_PUBLISHABLE_KEY=pk_test_51...your_test_key
STRIPE_WEBHOOK_SECRET=whsec_...your_webhook_secret
PLATFORM_FEE_PERCENTAGE=5

# ---------------------------
# üìä Observability (Optional)
# ---------------------------
# LOG_LEVEL=debug
# SENTRY_DSN=
# NEW_RELIC_LICENSE_KEY=

# ---------------------------
# üîß Development Tools
# ---------------------------
# SWAGGER_ENABLED=true
# SWAGGER_PATH=/docs
# DEBUG_MODE=true

# ---------------------------
# üìù Notes:
# ---------------------------
# 1. Copy this file to .env and update values
# 2. Never commit .env to git
# 3. For MinIO: run `docker-compose --profile storage up -d`
# 4. For MailHog: run `docker-compose --profile mail up -d`
# 5. Access MailHog UI: http://localhost:8025
# 6. Access MinIO Console: http://localhost:9001